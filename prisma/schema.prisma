// This Prisma schema models two independent authentication silos (Weokto & Stam)
// with dedicated users, sessions, and verification tokens for magic-link auth.

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model WeoktoUser {
  id        String           @id @default(cuid())
  pseudo    String?
  lastName  String?
  firstName String?
  birthDate DateTime?
  email     String?          @unique
  createdAt DateTime?        @default(now())

  sessions  WeoktoSession[]

  @@index([email])
}

model WeoktoSession {
  id           String    @id @default(cuid())
  sessionToken String    @unique
  userId       String
  expires      DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  userAgent    String?
  ipAddress    String?

  user WeoktoUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WeoktoVerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())

  @@id([identifier, token])
}

model StamUser {
  id        String          @id @default(cuid())
  pseudo    String?
  lastName  String?
  firstName String?
  birthDate DateTime?
  email     String?         @unique
  createdAt DateTime?       @default(now())

  sessions  StamSession[]

  @@index([email])
}

model StamSession {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userAgent    String?
  ipAddress    String?

  user StamUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StamVerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())

  @@id([identifier, token])
}
